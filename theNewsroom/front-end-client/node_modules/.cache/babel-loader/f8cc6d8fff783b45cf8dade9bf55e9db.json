{"remainingRequest":"/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js!/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Saved.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/src/views/Saved.vue","mtime":1603259460769},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":1603160570795},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/babel-loader/lib/index.js","mtime":1603160570511},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vuetify-loader/lib/loader.js","mtime":1603160578726},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/cache-loader/dist/cjs.js","mtime":1603160570795},{"path":"/Users/liamdale/OneDrive/Uni/COMP/20T3/COMP3900/capstone-project-comp3900-w17a-212-monolith/theNewsroom/front-end-client/node_modules/vue-loader/lib/index.js","mtime":1603160578632}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2xpYW1kYWxlL09uZURyaXZlL1VuaS9DT01QLzIwVDMvQ09NUDM5MDAvY2Fwc3RvbmUtcHJvamVjdC1jb21wMzkwMC13MTdhLTIxMi1tb25vbGl0aC90aGVOZXdzcm9vbS9mcm9udC1lbmQtY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBvcHVwIGZyb20gIi4uL2NvbXBvbmVudHMvY29tbW9uL1BvcHVwIjsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwU3RhdGUsIG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRvcGljcyIsCiAgY29tcG9uZW50czogewogICAgUG9wdXA6IFBvcHVwCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9wdXA6IGZhbHNlLAogICAgICBzYXZlZDogewogICAgICAgIGNvbmZpZzE6IHsKICAgICAgICAgIHRpdGxlOiAiUG9saXRpY3MiLAogICAgICAgICAgdG9waWNzOiBbewogICAgICAgICAgICB0aXRsZTogJ0Nvcm9uYXZpcnVzJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ1UuUy4gRWxlY3Rpb24nCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHRpdGxlOiAnQ2FsaWZvcm5pYW4gQnVzaGZpcmVzJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ05ldyBaZWFsYW5kJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ01lbGJvdXJuZScKICAgICAgICAgIH1dCiAgICAgICAgfSwKICAgICAgICBjb25maWcyOiB7CiAgICAgICAgICB0aXRsZTogIkNvcm9uYXZpcnVzIiwKICAgICAgICAgIHRvcGljczogW3sKICAgICAgICAgICAgdGl0bGU6ICdDb3JvbmF2aXJ1cycKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdGl0bGU6ICdVLlMuIEVsZWN0aW9uJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ0NhbGlmb3JuaWFuIEJ1c2hmaXJlcycKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdGl0bGU6ICdOZXcgWmVhbGFuZCcKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdGl0bGU6ICdNZWxib3VybmUnCiAgICAgICAgICB9XQogICAgICAgIH0sCiAgICAgICAgY29uZmlnMzogewogICAgICAgICAgdGl0bGU6ICJBdXN0cmFsaWEiLAogICAgICAgICAgdG9waWNzOiBbewogICAgICAgICAgICB0aXRsZTogJ0Nvcm9uYXZpcnVzJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ1UuUy4gRWxlY3Rpb24nCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHRpdGxlOiAnQ2FsaWZvcm5pYW4gQnVzaGZpcmVzJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ05ldyBaZWFsYW5kJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ01lbGJvdXJuZScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdGl0bGU6ICdDb3JvbmF2aXJ1cycKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdGl0bGU6ICdVLlMuIEVsZWN0aW9uJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ0NhbGlmb3JuaWFuIEJ1c2hmaXJlcycKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdGl0bGU6ICdOZXcgWmVhbGFuZCcKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdGl0bGU6ICdNZWxib3VybmUnCiAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKFsnYWRkU2VsZWN0ZWQnLCAncmVtb3ZlU2VsZWN0ZWQnLCAnb3BlblRvcGljJywgJ25leHRUb3BpYycsICdwcmV2aW91c1RvcGljJywgJ2Nsb3NlVG9waWMnLCAnZW1wdHlTZWxlY3RlZCcsICdzZXRTZWxlY3RlZCddKSksIHt9LCB7CiAgICBvcGVuOiBmdW5jdGlvbiBvcGVuKHRpdGxlKSB7CiAgICAgIHRoaXMucG9wdXAgPSB0cnVlOwogICAgICB0aGlzLm9wZW5Ub3BpYyh0aXRsZSk7CiAgICB9LAogICAgdmlld1RyZW5kczogZnVuY3Rpb24gdmlld1RyZW5kcyh0b3BpY3MpIHsKICAgICAgdGhpcy5lbXB0eVNlbGVjdGVkKCk7CiAgICAgIHZhciBpOwoKICAgICAgZm9yIChpID0gMDsgaSA8IHRvcGljcy5sZW5ndGg7IGkrKykgewogICAgICAgIHRoaXMuYWRkU2VsZWN0ZWQodG9waWNzW2ldLnRpdGxlKTsKICAgICAgfQoKICAgICAgdGhpcy5yb3V0ZXIuZ28oJy90cmVuZHMnKTsKICAgIH0KICB9KSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ3BvcHVwJywgJ3BvcHVwcycsICdzZWxlY3RlZCcsICdjdXJyZW50X3RvcGljJ10pKSwgbWFwR2V0dGVycyhbJ2lzUm9vdCcsICdudW1TZWxlY3RlZCcsICdpc1NlbGVjdGVkJywgJ2dldFNlbGVjdGVkJ10pKQp9Ow=="},{"version":3,"sources":["Saved.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,KAAA,MAAA,4BAAA;AAEA,SACA,UADA,EAEA,QAFA,EAGA,YAHA,QAIA,MAJA;AAMA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GAFA;AAMA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,KAAA,EAAA,UADA;AAEA,UAAA,MAAA,EAAA,CAAA;AACA,YAAA,KAAA,EAAA;AADA,WAAA,EAGA;AACA,YAAA,KAAA,EAAA;AADA,WAHA,EAMA;AACA,YAAA,KAAA,EAAA;AADA,WANA,EASA;AACA,YAAA,KAAA,EAAA;AADA,WATA,EAYA;AACA,YAAA,KAAA,EAAA;AADA,WAZA;AAFA,SADA;AAoBA,QAAA,OAAA,EAAA;AACA,UAAA,KAAA,EAAA,aADA;AAEA,UAAA,MAAA,EAAA,CAAA;AACA,YAAA,KAAA,EAAA;AADA,WAAA,EAGA;AACA,YAAA,KAAA,EAAA;AADA,WAHA,EAMA;AACA,YAAA,KAAA,EAAA;AADA,WANA,EASA;AACA,YAAA,KAAA,EAAA;AADA,WATA,EAYA;AACA,YAAA,KAAA,EAAA;AADA,WAZA;AAFA,SApBA;AAuCA,QAAA,OAAA,EAAA;AACA,UAAA,KAAA,EAAA,WADA;AAEA,UAAA,MAAA,EAAA,CAAA;AACA,YAAA,KAAA,EAAA;AADA,WAAA,EAGA;AACA,YAAA,KAAA,EAAA;AADA,WAHA,EAMA;AACA,YAAA,KAAA,EAAA;AADA,WANA,EASA;AACA,YAAA,KAAA,EAAA;AADA,WATA,EAYA;AACA,YAAA,KAAA,EAAA;AADA,WAZA,EAeA;AACA,YAAA,KAAA,EAAA;AADA,WAfA,EAkBA;AACA,YAAA,KAAA,EAAA;AADA,WAlBA,EAqBA;AACA,YAAA,KAAA,EAAA;AADA,WArBA,EAwBA;AACA,YAAA,KAAA,EAAA;AADA,WAxBA,EA2BA;AACA,YAAA,KAAA,EAAA;AADA,WA3BA;AAFA;AAvCA;AAFA,KAAA;AAAA,GANA;AAoFA,EAAA,OAAA,kCACA,YAAA,CAAA,CACA,aADA,EAEA,gBAFA,EAGA,WAHA,EAIA,WAJA,EAKA,eALA,EAMA,YANA,EAOA,eAPA,EAQA,aARA,CAAA,CADA;AAWA,IAAA,IAXA,gBAWA,KAXA,EAWA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,KAAA;AACA,KAdA;AAeA,IAAA,UAfA,sBAeA,MAfA,EAeA;AAEA,WAAA,aAAA;AACA,UAAA,CAAA;;AACA,WAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,WAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,KAAA;AACA;;AACA,WAAA,MAAA,CAAA,EAAA,CAAA,SAAA;AACA;AAvBA,IApFA;AA6GA,EAAA,QAAA,kCACA,QAAA,CAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,eAAA,CAAA,CADA,GAEA,UAAA,CAAA,CAAA,QAAA,EAAA,aAAA,EAAA,YAAA,EAAA,aAAA,CAAA,CAFA;AA7GA,CAAA","sourcesContent":["<template>\n<div class=\"home\">\n    <h1 class=\"subheading grey--text text-center\">Saved Trends</h1>\n    <v-container fluid>\n        <v-row>\n            <v-card tile flat class=\"flex-wrap text-justify justify-space-between\">\n                <v-card-title>Saved Trends</v-card-title>\n                <v-list width=100% rounded>\n                    <v-card tile flat class=\"saved flex-wrap text-justify justify-space-between\" v-for=\"config in saved\" :key=\"config\" @click=\"viewTrends(config.topics)\">\n                        <v-card-title class=\"headline\" v-text=\"config.title\"> </v-card-title>\n\n                        <v-card-actions>\n                            <v-row dense>\n                                <!-- we would need ot make sure we limit the number of characters shown -->\n                                <v-col v-for=\"topic in config.topics\" :key=\"topic.title\">\n                                    <v-btn width=100% depressed @click=\"open(topic.title)\">{{ topic.title }}</v-btn>\n                                </v-col>\n                                <Popup v-model=\"popup\" />\n                            </v-row>\n                        </v-card-actions>\n                        <v-divider />\n                        <div />\n                    </v-card>\n                </v-list>\n            </v-card>\n\n        </v-row>\n    </v-container>\n\n</div>\n</template>\n\n<!-- Need to figure out a way to only show the correct cards for if a user is signed in or not -->\n\n<script>\nimport Popup from \"../components/common/Popup\";\n\nimport {\n    mapGetters,\n    mapState,\n    mapMutations\n} from 'vuex';\n\nexport default {\n    name: \"Topics\",\n    components: {\n        Popup\n    },\n\n    data: () => ({\n        popup: false,\n        saved: {\n            config1: {\n                title: \"Politics\",\n                topics: [{\n                        title: 'Coronavirus',\n                    },\n                    {\n                        title: 'U.S. Election',\n                    },\n                    {\n                        title: 'Californian Bushfires',\n                    },\n                    {\n                        title: 'New Zealand',\n                    },\n                    {\n                        title: 'Melbourne',\n                    },\n                ],\n            },\n            config2: {\n                title: \"Coronavirus\",\n                topics: [{\n                        title: 'Coronavirus',\n                    },\n                    {\n                        title: 'U.S. Election',\n                    },\n                    {\n                        title: 'Californian Bushfires',\n                    },\n                    {\n                        title: 'New Zealand',\n                    },\n                    {\n                        title: 'Melbourne',\n                    },\n                ],\n            },\n            config3: {\n                title: \"Australia\",\n                topics: [{\n                        title: 'Coronavirus',\n                    },\n                    {\n                        title: 'U.S. Election',\n                    },\n                    {\n                        title: 'Californian Bushfires',\n                    },\n                    {\n                        title: 'New Zealand',\n                    },\n                    {\n                        title: 'Melbourne',\n                    },\n                    {\n                        title: 'Coronavirus',\n                    },\n                    {\n                        title: 'U.S. Election',\n                    },\n                    {\n                        title: 'Californian Bushfires',\n                    },\n                    {\n                        title: 'New Zealand',\n                    },\n                    {\n                        title: 'Melbourne',\n                    },\n                ],\n            }\n        }\n    }),\n\n    methods: {\n        ...mapMutations([\n            'addSelected',\n            'removeSelected',\n            'openTopic',\n            'nextTopic',\n            'previousTopic',\n            'closeTopic',\n            'emptySelected',\n            'setSelected'\n        ]),\n        open(title) {\n            this.popup = true\n            this.openTopic(title)\n        },\n        viewTrends(topics) {\n\n            this.emptySelected()\n            var i\n            for (i = 0; i < topics.length; i++) {\n                this.addSelected(topics[i].title)\n            }\n            this.router.go('/trends')\n        }\n    },\n    computed: {\n        ...mapState(['popup', 'popups', 'selected', 'current_topic']),\n        ...mapGetters(['isRoot', 'numSelected', 'isSelected', 'getSelected']),\n    },\n}\n</script>\n\n<style scoped>\ntd {\n    text-align: center !important;\n}\n\n.saved {\n    padding-top: 20px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}